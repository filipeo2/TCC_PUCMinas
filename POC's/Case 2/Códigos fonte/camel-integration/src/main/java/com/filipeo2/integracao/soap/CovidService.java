package com.filipeo2.integracao.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.7.fuse-770017-redhat-00001
  * 2020-12-01T20:29:38.783-03:00
 * Generated source version: 3.2.7.fuse-770017-redhat-00001
 *
 */
@WebServiceClient(name = "CovidService",
                  wsdlLocation = "http://localhost:8733/Design_Time_Addresses/CovidWcf/Service1/?wsdl",
                  targetNamespace = "http://tempuri.org/")
public class CovidService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "CovidService");
    public final static QName BasicHttpBindingICovidService = new QName("http://tempuri.org/", "BasicHttpBinding_ICovidService");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8733/Design_Time_Addresses/CovidWcf/Service1/?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CovidService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://localhost:8733/Design_Time_Addresses/CovidWcf/Service1/?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CovidService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CovidService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CovidService() {
        super(WSDL_LOCATION, SERVICE);
    }





    /**
     *
     * @return
     *     returns ICovidService
     */
    @WebEndpoint(name = "BasicHttpBinding_ICovidService")
    public ICovidService getBasicHttpBindingICovidService() {
        return super.getPort(BasicHttpBindingICovidService, ICovidService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ICovidService
     */
    @WebEndpoint(name = "BasicHttpBinding_ICovidService")
    public ICovidService getBasicHttpBindingICovidService(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingICovidService, ICovidService.class, features);
    }

}
